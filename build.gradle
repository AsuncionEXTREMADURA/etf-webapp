///////////////////////////////////////////////////////////////////////////////////////
//
// ETF-WebApp
//
///////////////////////////////////////////////////////////////////////////////////////

buildscript {
    repositories {
        maven {
            url "http://services.interactive-instruments.de/etfdev-af/plugins-releases-local"
            credentials {
                username 'ii-bda'
                password '6ozhS683'
            }}
        mavenCentral()
    }
    dependencies {
        classpath group: 'de.interactive_instruments.bda', name: 'etf-bda', version:'1.0.23'
        classpath "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    }
    dependencies {
        ant.unjar src: configurations.classpath.files.find {it.path.contains('etf')}, dest: 'build/gradle'
    }
}
apply from: 'build/gradle/ii-bda.gradle'

///////////////////////////////////////////////////////////////////////////////////////

group = 'de.interactive_instruments.etf'
description = 'ETF Presentation and Controller Layer'

apply plugin: 'war'
apply plugin: 'jetty'
import groovy.json.JsonSlurper

ext.springSecurityVersion = "4.0.4.RELEASE"
ext.springSecurityOAuth2Version = "2.0.9.RELEASE"
ext.springVersion = "4.2.5.RELEASE"

configurations {
    compile.exclude group:'xalan'
}

repositories {
    maven {
        url "http://files.basex.org/maven"
    }
    maven {
        url "https://services.interactive-instruments.de/etfdev-af/ext-deegree-cache"
        credentials {
            username gradle.rootProject.ext.r_user
            password gradle.rootProject.ext.r_pwd
        }
    }
}

dependencies {

    compile group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.7.0-4'

    compile group: 'de.interactive_instruments', name: 'ii-commons-util', version: '2.0.0' + project.snapshotSuffix
    compile group: 'de.interactive_instruments.etf', name: 'etf-core', version: '1.0.0' + project.snapshotSuffix
    compile group: 'de.interactive_instruments.etf', name: 'etf-spi', version: '1.0.0' + project.snapshotSuffix

    // TODO remove later, use SPI
    compile group: 'de.interactive_instruments.etf', name: 'etf-bsxds', version: '2.0.0' + project.snapshotSuffix

    compile("xerces:xercesImpl:"+etf_xercesVersion){
        force = true
    }
    compile("xml-apis:xml-apis:"+etf_xmlApisVersion){
        force = true
    }

    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
    compile group: 'commons-codec', name: 'commons-codec', version: etf_commonsCodecVersion
    compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.3.1'
    compile group: 'commons-io', name: 'commons-io', version: etf_commonsIoVersion
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'

    compile 'org.codehaus.groovy:groovy-all:2.4.6'

    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: etf_slf4jApiVersion

    // Conditional logback config file processing
    compile group: 'org.codehaus.janino', name: 'janino', version: '2.7.8'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: etf_logbackVersion

    testCompile group: 'junit', name: 'junit', version: etf_junitTestVersion


	// Spring dependencies
	//////////////////////////////////

    // JSON
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.3'

    compile(group: 'org.springframework', name: 'spring-webmvc', version: springVersion ) {
        exclude(module: 'commons-logging')
    }

    // Include nekohtml for thymeleaf
    compile('net.sourceforge.nekohtml:nekohtml:1.9.22') {
        exclude group: 'xerces', module: 'xercesImpl'
    }

    compile "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security.oauth:spring-security-oauth2:$springSecurityOAuth2Version",

            "javax.servlet:jstl:1.2",
            "javax.validation:validation-api:1.1.0.Final",

            "org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE",
            "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE",
            "org.thymeleaf.extras:thymeleaf-extras-conditionalcomments:2.1.1.RELEASE"

    compile("org.thymeleaf.extras:thymeleaf-extras-tiles2-spring4:2.1.1.RELEASE") {
        exclude group: "org.slf4j", module: "jcl-over-slf4j"
    }

    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.2'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    compile group: 'joda-time', name: 'joda-time', version:'2.9.3'
    runtime group: 'joda-time', name: 'joda-time-jsptags', version:'1.1.1'

    // Web testing
    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
    testCompile group: 'org.easymock', name: 'easymock', version:'3.1'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'2.46.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version:'2.46.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version:'2.46.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version:'2.46.0'

    // API
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    // compile group: 'io.springfox', name: 'springfox-staticdocs', version: '2.4.0'


    ext.deegreeVersion = '3.3.17'


    // !!! TODO TEMPORARY !!!

    // Validator dependencies

    compile('org.bouncycastle:bcprov-jdk15on:1.53')
    compile('com.thoughtworks.xstream:xstream:1.4.8')
    compile('dom4j:dom4j:1.6.1') {
        exclude group: 'xerces'
        exclude group: 'xml-apis'
    }
    compile('com.vividsolutions:jts:1.13')
    compile('org.apache.httpcomponents:httpclient:4.5.1') {
        exclude group: 'commons-logging'
    }
    compile('commons-io:commons-io:2.4')
    compile('org.jdom:jdom:2.0.2') {
        exclude group: 'xerces'
        exclude group: 'xalan'
    }
    compile('jaxen:jaxen:1.1.6') {
        exclude group: 'xerces'
        exclude group: 'xml-apis'
    }
    compile('org.apache.santuario:xmlsec:2.0.5') {
        exclude group: 'org.slf4j'
    }
    compile("org.deegree:deegree-core-cs:$deegreeVersion") {
        exclude group: 'org.postgis'
        exclude group: 'postgresql'
        exclude group: 'commons-logging'
        exclude group: 'log4j'
    }
    compile("org.deegree:deegree-core-base:$deegreeVersion") {
        exclude group: 'org.slf4j'
        exclude group: 'xerces'
        exclude group: 'xml-apis'
        exclude group: 'com.h2database'
        exclude group: 'org.postgis'
        exclude group: 'postgresql'
        exclude group: 'commons-logging'
    }
    compile('com.github.davidmoten:rtree:0.7.6')
    compile 'com.github.ben-manes.caffeine:caffeine:2.3.1'
    compile('org.apache.commons:commons-jcs-core:2.0-beta-1')

    // !!! TODO END TEMPORARY !!!

}


clean << {
    delete fileTree(dir: 'src/main/webapp/WEB-INF/etf/ds/db/', include: '.basex')
    delete fileTree(dir: 'src/main/webapp/WEB-INF/etf/ds/db/data' )
    delete fileTree(dir: 'src/main/webapp/WEB-INF/etf/ds/obj' , include: '**/*')
    delete fileTree(dir: 'src/main/webapp/WEB-INF/etf/testdata' , include: '**/*')
}

def findRuntimeJar(prefix) {
    configurations.runtime.filter { it.name.startsWith(prefix) }
}

def normalizeJQPath(def path) {
    // META-INF\resources\webjars\jquery-mobile\1.4.5\*.* -> *.*
    def modified=path.replaceAll('META-INF/resources/webjars/[^/]*/[^/]*/(.*)', {"${it[1]}"})
    return modified
}

// war.dependsOn(generateRebel)


war {
    doFirst {
        manifest {
            attributes(
                    'Implementation-Title': project.name,
                    'Implementation-Vendor': 'interactive instruments GmbH',
                    'Implementation-Vendor-Id': 'de.interactive_instruments',
                    'Implementation-Version': project.version,
                    'Built-By': System.getProperty('user.name'),
                    'Build-Host': java.net.InetAddress.getLocalHost().getHostName(),
                    'Build-JDK': System.getProperty('java.version'),
                    'Build-Time': new Date().format("yyyyMMdd'T'HHmm"),
                    'Source-Compatibility': project.sourceCompatibility,
                    'Target-Compatibility': project.targetCompatibility
            )
        }

        archiveName 'etf-webapp.war'


    }
}

jettyRun {
	httpPort = 8080
	stopPort = 8090
	reload = 'automatic'
	scanIntervalSeconds = 2
	contextPath = ''
}

if(project.hasProperty("opbeat.organizationId")) {
  task opbeatRelease() << {

    final String reqPath = "/api/v1/organizations/"+
        project.getProperty("opbeat.organizationId")+
        "/apps/"+
        project.getProperty("opbeat.appId")+"/releases/"
    def releaseData = [
      'rev':repo.head().abbreviatedId,
      'branch':'master',
      'status':'completed']
    def reqHeaders = [
      'User-Agent': 'gradle-notify',
      'Authorization':"Bearer "+ project.getProperty("opbeat.api_key")]

    def http = new groovyx.net.http.HTTPBuilder("https://intake.opbeat.com");
    http.request( groovyx.net.http.Method.POST, groovyx.net.http.ContentType.JSON ) {
      uri.path = reqPath
      headers = reqHeaders
      body = releaseData
      response.failure = { resp, reader  -> System.out << reader }
      response.success = { println "Notified Opbeat" }
    }
  }
  if (tasks.findByPath('uploadArchives') != null) {
       opbeatRelease.shouldRunAfter uploadArchives
       afterReleaseBuild.dependsOn opbeatRelease
  }
}
